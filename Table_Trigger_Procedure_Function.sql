--create table
create table SINHVIEN (
   MSSV                 VARCHAR(20)              not null,
   TENSV                VARCHAR2(50),
   NGSINH               DATE,
   GIOITINH             NUMBER(1) CHECK (GIOITINH IN (0,1)),
   EMAIL                VARCHAR2(50),
   SDT                  NUMBER,
   MATKHAU              VARCHAR2(20),
   constraint PK_SINHVIEN primary key (MSSV)
);

create table NHANVIEN (
   MANV                 VARCHAR2(20) NOT NULL,
   MANGUOIQUANLY        VARCHAR2(20),
   CCCD                 NUMBER(12) NOT NULL,
   TENNV                VARCHAR2(50),
   NGSINH               DATE,
   GIOITINH             NUMBER(1) CHECK (GIOITINH IN (0,1)),
   LOAINV               NUMBER(1) CHECK (LOAINV IN (1,2,3)), -- 1: 'Truong toa', 2: 'Ke toan', 3: 'Quan ly'
   EMAIL                VARCHAR2(50),
   SDT                  NUMBER,
   MATKHAU              VARCHAR2(20),
   constraint PK_NHANVIEN primary key (MANV),
   CONSTRAINT FK_NV_MANQL FOREIGN KEY (MANGUOIQUANLY) REFERENCES NHANVIEN(MANV)
);

create table TOA (
   MATOA                VARCHAR2(20)          not null,
   MATRUONGTOA          VARCHAR2(20)          not null,
   LOAITOA              NUMBER(1) CHECK (LOAITOA IN (0,1)), -- nam: 1 / nu: 0
   SOTANG               NUMBER,
   SOLUONGPHONG         NUMBER,
   SOSVDANGO            NUMBER DEFAULT 0,
   constraint PK_TOA primary key (MATOA),
   CONSTRAINT FK_TOA_MATRUONGOTA FOREIGN KEY (MATRUONGTOA) REFERENCES NHANVIEN(MANV)
);

create table PHONG (
   MAPHONG              VARCHAR2(20)          not null,
   MATOA                VARCHAR2(20)          not null,
   TANG                 NUMBER,
   LOAIPHONG            NUMBER(1) CHECK (LOAIPHONG IN (2, 4, 6, 8)),
   GIATIEN              NUMBER(10),
   SISO                 NUMBER DEFAULT 0,
   TINHTRANGPHONG	NUMBER(1) DEFAULT 0 CHECK (TINHTRANGPHONG IN (0, 1)), -- 0: co the dang ky / 1: khong the dang ky
   constraint PK_PHONG primary key (MAPHONG),
   CONSTRAINT FK_PHONG_MATOA FOREIGN KEY (MATOA) REFERENCES TOA(MATOA)  
);

create table HOATDONG (
   MAHOATDONG           VARCHAR2(20)          not null,
   MANV                 VARCHAR2(20)          not null,
   TENHOATDONG          VARCHAR2(50),
   NGAYDIENRA           DATE,
   THONGTINCT           VARCHAR2(2000),
   SOLUONGTOIDA         NUMBER,
   SOLUONGDK            NUMBER DEFAULT 0,
   constraint PK_HOATDONG primary key (MAHOATDONG),
   CONSTRAINT FK_HOATDONG_MANV FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV)
);


CREATE TABLE CUTRU(
	MSSV                    VARCHAR2(20) NOT NULL,
	MAPHONG                 VARCHAR2(20) NOT NULL,
	TUNGAY                  DATE,
	DENNGAY                 DATE,
	NGAYTRAPHONG            DATE,
    TINHTRANGO	NUMBER(1) DEFAULT 0 CHECK (TINHTRANGO IN (0, 1, 2)),
    GHICHU                  VARCHAR2(2000),    
	CONSTRAINT PK_CUTRU_MSSV_MAPHONG PRIMARY KEY (MSSV,MAPHONG, TUNGAY),
	CONSTRAINT FK_CUTRU_MSSV FOREIGN KEY (MSSV) REFERENCES SINHVIEN(MSSV),
	CONSTRAINT FK_CUTRU_MAPHONG FOREIGN KEY (MAPHONG) REFERENCES PHONG(MAPHONG)
);

create table DANGKYTG (
   MAHOATDONG           VARCHAR2(20)          not null,
   MSSV                 VARCHAR2(20)          not null,
   HESOTG               NUMBER(1) DEFAULT 0,
   constraint PK_DANGKYTG primary key (MAHOATDONG, MSSV),
   CONSTRAINT FK_DANGKYTG_MAHOATDONG FOREIGN KEY (MAHOATDONG) REFERENCES HOATDONG(MAHOATDONG),
   CONSTRAINT FK_DANGKYTG_MSSV FOREIGN KEY (MSSV) REFERENCES SINHVIEN(MSSV)
);

create table HOADON (
   MAHOADON             VARCHAR2(20)          not null,
   MANV                 VARCHAR2(20),          
   MSSV 		        VARCHAR2(20),
   MAPHONG 		        VARCHAR2(20),
   TUNGAY 		        DATE,
   SOTIEN               NUMBER(10,2),
   LOAIHOADON           NUMBER(1) CHECK (LOAIHOADON IN (1,2,3,4,5,6)), -- 1: 'Dien', 2: 'Nuoc', 3: 'Tien phong', 4: 'Sua chua phong', 5: 'Ve sinh', 6: 'Khac'
   NGAYLAPHOADON        DATE DEFAULT SYSDATE,
   HANTHANHTOAN         DATE,
   NGAYTHANHTOAN        DATE,
   TINHTRANGHD	NUMBER(1) DEFAULT 0 CHECK (TINHTRANGHD IN (0, 1, 2)),
   constraint PK_HOADON primary key (MAHOADON),
   CONSTRAINT FK_HOADON_MANV FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV),
   CONSTRAINT FK_HOADON_CUTRU FOREIGN KEY (MSSV, MAPHONG, TUNGAY) REFERENCES CUTRU(MSSV, MAPHONG, TUNGAY)
);


create table THONGBAO (
   MATHONGBAO           VARCHAR2(20)          not null,
   MANV                 VARCHAR2(20)          not null,
   MANGUOINHAN          VARCHAR2(20),
   NGAYDANG             DATE DEFAULT SYSDATE,
   NOIDUNG              VARCHAR2(2000),
   MANGUOINHANNV        VARCHAR2(20),
   constraint PK_THONGBAO primary key (MATHONGBAO),
   CONSTRAINT FK_THONGBAO_MANV FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV),
   CONSTRAINT FK_THONGBAO_MANGUOINHAN FOREIGN KEY (MANGUOINHAN) REFERENCES SINHVIEN(MSSV),
   CONSTRAINT FK_THONGBAO_MANGUOINHANNV FOREIGN KEY (MANGUOINHANNV) REFERENCES NHANVIEN(MANV)
);

create table PHIEUVIPHAM (
   MAVIPHAM             VARCHAR2(20)          not null,
   MANV                 VARCHAR2(20)          not null,
   MSSV                 VARCHAR2(20),
   NOIDUNG              VARCHAR2(255),
   NGAYVIPHAM           DATE,
   NGAYLAPVP            DATE DEFAULT SYSDATE,
   constraint PK_VIPHAM primary key (MAVIPHAM),
   CONSTRAINT FK_VIPHAM_MANV FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV),
   CONSTRAINT FK_VIPHAM_MSSV FOREIGN KEY (MSSV) REFERENCES SINHVIEN(MSSV)
);

create table PHIEUYEUCAU (
   MAYEUCAU            	VARCHAR2(20)          not null,
   MANV                 VARCHAR2(20)          not null,
   MSSV 		VARCHAR2(20) 		NOT NULL,
   MAPHONG 		VARCHAR2(20) 		NOT NULL,
   TUNGAY 		DATE,
   LOAIYEUCAU           NUMBER(1) CHECK (LOAIYEUCAU IN (1,2,3,4,5,6)), -- 1: '√??i ph?ng', 2: 'Tr? ph?ng', 3: 'Gia h?n ph?ng', 4: 'S?a ch?a', 5: 'Khi?u n?i vi ph?m', 6: 'Kh√°c'
   NOIDUNG              VARCHAR2(2000),
   NGAYYEUCAU           DATE DEFAULT SYSDATE,
   NGAYHOANTHANH        DATE,
   TRANGTHAIXULY        NUMBER(1) DEFAULT 0,
   GHICHU		VARCHAR2(50),
   constraint PK_YEUCAU primary key (MAYEUCAU),
   CONSTRAINT FK_YEUCAU_MANV FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV), 
   CONSTRAINT FK_YEUCAU_CUTRU FOREIGN KEY (MSSV, MAPHONG, TUNGAY) REFERENCES CUTRU(MSSV, MAPHONG, TUNGAY)
);

--------------------------------------------------------
--------------------CONSTRAINT--------------------------

--CHECK SOLUONGDK < SOLUONGTOIDA
ALTER TABLE HOATDONG ADD CONSTRAINT CK_SOLUONGDK CHECK (SOLUONGDK <= SOLUONGTOIDA);

-------SI SO CUA PHONG BE HON LOAI PHONG X
ALTER TABLE PHONG ADD CONSTRAINT CK_SISO CHECK (SISO<=LOAIPHONG);

--------------------------------------------------------
--------------------TRIGGER-----------------------------

-- Tu dong cap nhat masv khi chuyen nhuong
CREATE OR REPLACE TRIGGER trg_update_mssv
AFTER UPDATE OF MSSV ON CUTRU
FOR EACH ROW
BEGIN
    -- Cap nhat MSSV trong bang HOADON
    UPDATE HOADON
    SET MSSV = :NEW.MSSV
    WHERE MSSV = :OLD.MSSV
    AND MAPHONG = :OLD.MAPHONG
    AND TUNGAY = :OLD.TUNGAY;

    -- Cap nhat MSSV trong bang PHIEUYEUCAU
    UPDATE PHIEUYEUCAU
    SET MSSV = :NEW.MSSV
    WHERE MSSV = :OLD.MSSV
    AND MAPHONG = :OLD.MAPHONG
    AND TUNGAY = :OLD.TUNGAY;
END;

---------NGAY VI PHAM < DENNGAY
create or replace TRIGGER VIPHAM_NGAYVIPHAM
BEFORE INSERT OR UPDATE ON PHIEUVIPHAM 
FOR EACH ROW
DECLARE
 V_DENNGAY DATE;
BEGIN
    SELECT DENNGAY INTO V_DENNGAY
    FROM CUTRU
    WHERE MSSV = :NEW.MSSV AND NGAYTRAPHONG IS NULL;
    IF(:NEW.NGAYVIPHAM > V_DENNGAY) THEN        
         RAISE_APPLICATION_ERROR(-20001, 'NGAY VI PHAM NHO HON THOI HAN O CUA SINH VIEN');
    END IF;
END;
/
------------PHONG IT NGUOI THI NHIEU TIEN HON X
create or replace NONEDITIONABLE TRIGGER PHONG_LOAIPHONG2 
AFTER INSERT OR UPDATE ON PHONG
DECLARE
    CURSOR c_phong IS
        SELECT DISTINCT LOAIPHONG FROM PHONG;
    v_giatien NUMBER(10);
    v_diff_count NUMBER;
BEGIN
    FOR r_phong IN c_phong LOOP
        BEGIN
            -- L?y gi√° ti?n chu?n c?a lo?i ph?ng n√†y (gi√° c?a ph?ng √∞?u ti√™n t?m th?y)
            SELECT GIATIEN INTO v_giatien
            FROM PHONG
            WHERE LOAIPHONG = r_phong.LOAIPHONG
            AND ROWNUM = 1;

            -- √??m s? ph?ng c√≥ gi√° ti?n kh√°c v?i gi√° ti?n chu?n
            SELECT COUNT(*)
            INTO v_diff_count
            FROM PHONG
            WHERE (LOAIPHONG > r_phong.LOAIPHONG AND GIATIEN > v_giatien) 
                    OR (LOAIPHONG < r_phong.LOAIPHONG AND GIATIEN < v_giatien); 

            -- N?u t?n t?i ph?ng c√≥ gi√° ti?n kh√°c, b√°o l?i
            IF v_diff_count > 0 THEN
                RAISE_APPLICATION_ERROR(-20001, 'PHONG IT NGUOI THI TIEN NHIEU');
            END IF;
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                -- N?u kh√¥ng t?m th?y ph?ng n√†o th? b? qua
                NULL;
        END;
    END LOOP;
END;
/
------CAC TRIGGER CAP NHAT SI SO PHONG
CREATE OR REPLACE TRIGGER TANG_SISOPHONG
AFTER INSERT
ON CUTRU
FOR EACH ROW
DECLARE
        N_TONGSISO NUMBER := 0;
        V_MATOA PHONG.MATOA%TYPE;
BEGIN
        UPDATE PHONG
        SET SISO = SISO + 1
        WHERE MAPHONG = :NEW.MAPHONG;
        
        SELECT MATOA INTO V_MATOA FROM PHONG WHERE MAPHONG = :NEW.MAPHONG;
        
        SELECT SUM(SISO) INTO N_TONGSISO FROM PHONG WHERE MATOA = V_MATOA;
        UPDATE TOA
        SET SOSVDANGO = N_TONGSISO
        WHERE MATOA = V_MATOA;
END;
/
CREATE OR REPLACE TRIGGER GIAM_SISOPHONG
AFTER DELETE
ON CUTRU
FOR EACH ROW
DECLARE
        N_TONGSISO NUMBER := 0;
        V_MATOA PHONG.MATOA%TYPE;
BEGIN
        UPDATE PHONG
        SET SISO = SISO - 1
        WHERE MAPHONG = :OLD.MAPHONG;
        
        SELECT MATOA INTO V_MATOA FROM PHONG WHERE MAPHONG = :OLD.MAPHONG;
        
        SELECT SUM(SISO) INTO N_TONGSISO FROM PHONG WHERE MATOA = V_MATOA;
        UPDATE TOA
        SET SOSVDANGO = N_TONGSISO 
        WHERE MATOA = V_MATOA;
END;
/
create or replace TRIGGER CAPNHAT_SISOPHONG
AFTER UPDATE OF NGAYTRAPHONG
ON CUTRU
FOR EACH ROW
DECLARE
        N_TONGSISOTOACU NUMBER := 0;
        N_TONGSISOTOAMOI NUMBER := 0;
        V_MATOACU PHONG.MATOA%TYPE;
        V_MATOAMOI PHONG.MATOA%TYPE;
BEGIN
        UPDATE PHONG
        SET SISO = SISO - 1
        WHERE MAPHONG = :OLD.MAPHONG;

--        UPDATE PHONG
--        SET SISO = SISO + 1
--        WHERE MAPHONG = :NEW.MAPHONG;

        SELECT MATOA INTO V_MATOACU FROM PHONG WHERE MAPHONG = :OLD.MAPHONG;
        SELECT MATOA INTO V_MATOAMOI FROM PHONG WHERE MAPHONG = :NEW.MAPHONG;

        SELECT SUM(SISO) INTO N_TONGSISOTOACU FROM PHONG WHERE MATOA = V_MATOACU;
        SELECT SUM(SISO) INTO N_TONGSISOTOAMOI FROM PHONG WHERE MATOA = V_MATOAMOI;
        UPDATE TOA
        SET SOSVDANGO = N_TONGSISOTOACU 
        WHERE MATOA = V_MATOACU;

        UPDATE TOA
        SET SOSVDANGO = N_TONGSISOTOAMOI 
        WHERE MATOA = V_MATOAMOI;
END;
/
-- TANG SO LUONG PHONG CUA TOA
create or replace TRIGGER TANGPHONG
AFTER INSERT 
ON PHONG
FOR EACH ROW
DECLARE
BEGIN
    UPDATE TOA
    SET SOLUONGPHONG = SOLUONGPHONG +1
    WHERE MATOA = :NEW.MATOA;
END;
/

-- GIAM SO LUONG PHONG CUA TOA
CREATE OR REPLACE TRIGGER GIAMPHONG
AFTER DELETE
ON PHONG
FOR EACH ROW
DECLARE
BEGIN
    UPDATE TOA
    SET SOLUONGPHONG = SOLUONGPHONG - 1
    WHERE MATOA = :OLD.MATOA;
END;
/
--TANG SO LUONG DK
CREATE OR REPLACE TRIGGER TANG_SOLUONGDK
AFTER INSERT 
ON DANGKYTG
FOR EACH ROW
DECLARE
BEGIN
    UPDATE HOATDONG
    SET SOLUONGDK = SOLUONGDK +1
    WHERE MAHOATDONG = :NEW.MAHOATDONG;
END;
/

--TRIGGER XOA DANGKY
CREATE OR REPLACE TRIGGER XOA_DANGKY
AFTER DELETE
ON DANGKYTG
FOR EACH ROW
DECLARE
BEGIN
    UPDATE HOATDONG
    SET SOLUONGDK = SOLUONGDK-1
    WHERE MAHOATDONG = :OLD.MAHOATDONG;
END;
/

-----------------------------------------------------------------------
-----------------------------PROCEDURES--------------------------------

-- 1. TAO TU DONG MAPHIEUYEUCAU + THEM PHIEUYC CHO SV 
create or replace PROCEDURE THEM_PHIEUYEUCAU (
    V_MSSV VARCHAR2,
    V_LOAIYEUCAU PHIEUYEUCAU.LOAIYEUCAU%TYPE,
    V_NOIDUNG VARCHAR2
)
AS
V_LAST_ID PHIEUYEUCAU.MAYEUCAU%TYPE;
V_NEW_ID PHIEUYEUCAU.MAYEUCAU%TYPE;
V_MATRUONGTOA NHANVIEN.MANV%TYPE;
V_MAPHONG PHONG.MAPHONG%TYPE;
D_TUNGAY CUTRU.TUNGAY%TYPE;
BEGIN
    SELECT MAX(MAYEUCAU) INTO V_LAST_ID FROM PHIEUYEUCAU;
    IF V_LAST_ID IS NULL THEN
        V_NEW_ID := 'YC01';
    ELSE
        V_NEW_ID := 'YC' || LPAD(TO_NUMBER(SUBSTR(V_LAST_ID, 3)) + 1, 2, '0');
    END IF;

    --LAY MATRUONGTOA CUA NV DANG O
    SELECT MATRUONGTOA INTO V_MATRUONGTOA
    FROM TOA T JOIN PHONG P ON T.MATOA = P.MATOA
               JOIN CUTRU C ON P.MAPHONG = C.MAPHONG
    WHERE C.MSSV = V_MSSV AND TINHTRANGO = 1;

    SELECT MAPHONG, TUNGAY INTO V_MAPHONG, D_TUNGAY
    FROM CUTRU
    WHERE MSSV = V_MSSV AND TINHTRANGO = 1;

    INSERT INTO PHIEUYEUCAU(MAYEUCAU, MANV, MSSV, MAPHONG, TUNGAY, LOAIYEUCAU, NOIDUNG) VALUES (V_NEW_ID,V_MATRUONGTOA,V_MSSV,V_MAPHONG, D_TUNGAY, V_LOAIYEUCAU,V_NOIDUNG);
END;
/
-- 2. TAO TU DONG MA HOAT DONG TU HOAT DONG CUOI CUNG --DUOC GOI KHI NHAN VIEN TAO HOATDONG
create or replace PROCEDURE THEM_HOATDONG ( 
    V_MAHOATDONG OUT VARCHAR2,
    V_TENHOATDONG VARCHAR2,
    V_MANV VARCHAR2,
    V_NGAYDIENRA VARCHAR2,
    V_THONGTINCT VARCHAR2,
    V_SOLUONGTOIDA NUMBER
)
AS
v_last_id VARCHAR2(20);
v_new_id  VARCHAR2(20);
BEGIN
  SELECT MAX(MAHOATDONG) INTO v_last_id FROM HOATDONG;
  IF v_last_id IS NULL THEN
    v_new_id := 'HOATDONG01';
  ELSE
      v_new_id := 'HOATDONG' || LPAD(TO_NUMBER(SUBSTR(v_last_id, 9)) + 1, 2, '0');
  END IF;
  V_MAHOATDONG := V_NEW_ID;
  INSERT INTO HOATDONG VALUES (V_MAHOATDONG,V_MANV,V_TENHOATDONG,TO_DATE(V_NGAYDIENRA,'DD-MM-YYYY'),V_THONGTINCT,V_SOLUONGTOIDA,0);     
end;
/
-- 3. DOI PHONG CHO SINH VIEN
CREATE OR REPLACE PROCEDURE DOI_PHONG(
    V_MSSV SINHVIEN.MSSV%TYPE,
    V_MAPHONG PHONG.MAPHONG%TYPE,
    V_TUNGAY OUT VARCHAR2,
    V_DENNGAY OUT VARCHAR2
)
AS
V_SISO NUMBER;
V_LOAIPHONG NUMBER;
V_MAPHONGCU PHONG.MAPHONG%TYPE;
V_MATOACU TOA.MATOA%TYPE;
V_MATOAMOI TOA.MATOA%TYPE;
V_MATRUONGTOAMOI NHANVIEN.MANV%TYPE;
V_MAYEUCAU PHIEUYEUCAU.MAYEUCAU%TYPE;
V_GIATIENCU PHONG.GIATIEN%TYPE;
V_GIATIENMOI PHONG.GIATIEN%TYPE;
V_TUNGAYCU VARCHAR2;
BEGIN
V_TUNGAY := TO_DATE(SYSDATE,'DD-MM-YYYY');
 --KIEM TRA SI SO PHONG CHUYENDEN
        SELECT SISO,LOAIPHONG INTO V_SISO, V_LOAIPHONG
        FROM PHONG
        WHERE MAPHONG = V_MAPHONG
        FOR UPDATE;
        IF (V_SISO = V_LOAIPHONG) THEN
            RAISE_APPLICATION_ERROR(-20001,'PHONG DA DAY');
        END IF;
    --LAY MATOA HIEN TAI
    SELECT P.MATOA INTO V_MATOACU FROM TOA T JOIN PHONG P ON T.MATOA = P.MATOA
                            JOIN CUTRU C ON P.MAPHONG=C.MAPHONG
                 WHERE C.MSSV = V_MSSV AND C.NGAYTRAPHONG IS NULL;
    --LAY MATOA MOI
    SELECT P.MATOA INTO V_MATOAMOI FROM TOA T JOIN PHONG P ON T.MATOA = P.MATOA WHERE MAPHONG = V_MAPHONG;
    --SO SANH 2 MA TOA
    IF (V_MATOAMOI != V_MATOACU) THEN
    UPDATE PHIEUYEUCAU SET TRANGTHAIXULY = 2 WHERE MSSV = V_MSSV AND LOAIYEUCAU = 1 AND NOIDUNG = V_MAPHONG; --CAP NHAT PHIEU THANH DANG CHO
    V_MATRUONGTOAMOI := getMATRUONGTOAMOI(V_MAPHONG);
    V_MAYEUCAU := getMAYEUCAU(V_MSSV,V_MAPHONG);
    THEM_THONGBAO2(V_MATRUONGTOAMOI,V_MAYEUCAU);
    ELSE -- CUNG TOA 
    --CAP NHAT NGAY TRA PHONG CHO PHONG CU
    SELECT TO_CHAR(DENNGAY,'DD-MM-YYYY') INTO V_DENNGAY
    FROM CUTRU
    WHERE MSSV = V_MSSV AND NGAYTRAPHONG IS NULL;
    --LAY RA TUNGAY HIEN TAI
    SELECT TO_CHAR(TUNGAY,'DD-MM-YYYY') INTO V_TUNGAYCU
    FROM CUTRU
    WHERE MSSV = V_MSSV AND NGAYTRAPHONG IS NULL;
    UPDATE CUTRU SET NGAYTRAPHONG = TO_DATE(SYSDATE,'DD-MM-YYYY') WHERE  MSSV = V_MSSV AND NGAYTRAPHONG IS NULL;   
    --TUNGAY O PHONG MOI = SYSDATE, DENNGAY GIU NGUYEN
    --Lay ra ma phong hien tai cua sinh vien truoc khi doi phong
    SELECT MAPHONG INTO V_MAPHONGCU FROM CUTRU WHERE MSSV = V_MSSV AND TINHTRANGO = 1;
    --SV_THEM_THONGTIN(V_MSSV,V_MAPHONG,V_TUNGAY,V_DENNGAY);
    INSERT INTO CUTRU (MSSV,MAPHONG,TUNGAY,DENNGAY,TINHTRANGO) VALUES (V_MSSV,V_MAPHONG,V_TUNGAY,V_DENNGAY,1);
    --CAP NHAT TINH TRANG O THANH DA TRA PHONG
    UPDATE CUTRU SET TINHTRANGO = 2 WHERE MSSV = V_MSSV AND MAPHONG=V_MAPHONGCU;
    --CAP NHAT PHIEU YEU CAU
    UPDATE PHIEUYEUCAU SET TRANGTHAIXULY = 4, NGAYHOANTHANH = SYSDATE WHERE MSSV = V_MSSV AND LOAIYEUCAU = 1 AND TRANGTHAIXULY=0;
    --COMMIT;
    END IF;
END;
/

CREATE OR REPLACE FUNCTION getMAYEUCAU (
    V_MSSV SINHVIEN.MSSV%TYPE,
    V_MAPHONG PHONG.MAPHONG%TYPE
)
RETURN VARCHAR2
AS
V_MAYEUCAU PHIEUYEUCAU.MAYEUCAU%TYPE;
BEGIN
    SELECT MAYEUCAU INTO V_MAYEUCAU FROM PHIEUYEUCAU WHERE MSSV = V_MSSV AND LOAIYEUCAU = 1 AND TRANGTHAIXULY = 2 
                                                                          AND NOIDUNG = V_MAPHONG;
    RETURN V_MAYEUCAU;
END;
/
    

CREATE OR REPLACE FUNCTION getMATRUONGTOAMOI(
    V_MAPHONG PHONG.MAPHONG%TYPE
)
RETURN VARCHAR2
AS
V_MATRUONGTOAMOI NHANVIEN.MANV%TYPE;
BEGIN
    SELECT MATRUONGTOA INTO V_MATRUONGTOAMOI FROM TOA T JOIN PHONG P ON T.MATOA=P.MATOA
                       WHERE P.MAPHONG=V_MAPHONG;
    RETURN V_MATRUONGTOAMOI;
END;
/


CREATE OR REPLACE PROCEDURE DOI_PHONG2(
    V_MSSV SINHVIEN.MSSV%TYPE,
    V_MAPHONG PHONG.MAPHONG%TYPE,
    V_TUNGAY OUT VARCHAR2,
    V_DENNGAY OUT VARCHAR2
)
AS
V_SISO NUMBER;
V_LOAIPHONG NUMBER;
V_MAPHONGCU PHONG.MAPHONG%TYPE;
V_MATOACU TOA.MATOA%TYPE;
V_MATOAMOI TOA.MATOA%TYPE;
V_MATRUONGTOAMOI NHANVIEN.MANV%TYPE;
V_MAYEUCAU PHIEUYEUCAU.MAYEUCAU%TYPE;
BEGIN
V_TUNGAY := TO_DATE(SYSDATE,'DD-MM-YYYY');
 --KIEM TRA SI SO PHONG CHUYENDEN
        SELECT SISO,LOAIPHONG INTO V_SISO, V_LOAIPHONG
        FROM PHONG
        WHERE MAPHONG = V_MAPHONG
        FOR UPDATE;
        IF (V_SISO = V_LOAIPHONG) THEN
            RAISE_APPLICATION_ERROR(-20001,'PHONG DA DAY');
        END IF;
    -- CUNG TOA 
    --CAP NHAT NGAY TRA PHONG CHO PHONG CU
    SELECT TO_CHAR(DENNGAY,'DD-MM-YYYY') INTO V_DENNGAY
    FROM CUTRU
    WHERE MSSV = V_MSSV AND NGAYTRAPHONG IS NULL;
    UPDATE CUTRU SET NGAYTRAPHONG = TO_DATE(SYSDATE,'DD-MM-YYYY') WHERE  MSSV = V_MSSV AND NGAYTRAPHONG IS NULL;   
    --TUNGAY O PHONG MOI = SYSDATE, DENNGAY GIU NGUYEN
    --Lay ra ma phong hien tai cua sinh vien truoc khi doi phong
    SELECT MAPHONG INTO V_MAPHONGCU FROM CUTRU WHERE MSSV = V_MSSV AND TINHTRANGO = 1;
    --SV_THEM_THONGTIN(V_MSSV,V_MAPHONG,V_TUNGAY,V_DENNGAY);
    INSERT INTO CUTRU (MSSV,MAPHONG,TUNGAY,DENNGAY,TINHTRANGO) VALUES (V_MSSV,V_MAPHONG,V_TUNGAY,V_DENNGAY,1);
    --CAP NHAT TINH TRANG O THANH DA TRA PHONG
    UPDATE CUTRU SET TINHTRANGO = 2 WHERE MSSV = V_MSSV AND MAPHONG=V_MAPHONGCU;
    --CAP NHAT PHIEU YEU CAU
    UPDATE PHIEUYEUCAU SET TRANGTHAIXULY = 4, NGAYHOANTHANH = SYSDATE WHERE MSSV = V_MSSV AND LOAIYEUCAU = 1 AND NOIDUNG = V_MAPHONG
                                                                                          AND TRANGTHAIXULY = 2;
    --COMMIT;
END;
/

-- 4. THEM THONG TIN SINH VIEN
create or replace PROCEDURE SV_THEM_THONGTIN(
    v_MSSV IN VARCHAR2,
    V_MAPHONG IN VARCHAR2,
    V_TUNGAY IN VARCHAR2,
    V_DENNGAY IN VARCHAR2
)
AS
V_SISO NUMBER;
V_LOAIPHONG NUMBER;
BEGIN    
    SELECT SISO,LOAIPHONG INTO V_SISO, V_LOAIPHONG
    FROM PHONG
    WHERE MAPHONG = V_MAPHONG;
    --FOR UPDATE;
    IF (V_SISO = V_LOAIPHONG) THEN
        RAISE_APPLICATION_ERROR(-20001,'PHONG DA DAY');
    END IF;
    INSERT INTO CUTRU(MSSV,MAPHONG,TUNGAY,DENNGAY) 
                VALUES (V_MSSV,V_MAPHONG,TO_DATE(V_TUNGAY,'DD-MM-YYYY'), TO_DATE(V_DENNGAY,'DD-MM-YYYY'));
    COMMIT;
END;
/

-- 5. THEM VI PHAM
create or replace PROCEDURE THEM_VIPHAM(
    V_MAVP OUT VARCHAR2,
    V_MANV VARCHAR2,
    V_MSSV VARCHAR2,
    V_NOIDUNG VARCHAR2,
    V_NGAYVIPHAM VARCHAR2,
    V_NGAYLAPVP OUT VARCHAR2
)
AS
V_NEW_ID PHIEUVIPHAM.MAVIPHAM %TYPE;
V_LAST_ID PHIEUVIPHAM.MAVIPHAM %TYPE;
BEGIN
    SELECT MAX(MAVIPHAM) INTO V_LAST_ID FROM PHIEUVIPHAM;
    IF V_LAST_ID IS NULL THEN
        V_NEW_ID := 'VP01';
    ELSE
        V_NEW_ID := 'VP' || LPAD(TO_NUMBER(SUBSTR(V_LAST_ID, 3)) + 1, 2, '0');
    END IF;

    V_MAVP := V_NEW_ID;
    V_NGAYLAPVP := TO_DATE(SYSDATE,'DD-MM-YYYY');
    INSERT INTO PHIEUVIPHAM VALUES (V_MAVP,V_MANV,V_MSSV,V_NOIDUNG,TO_DATE(V_NGAYVIPHAM,'DD-MM-YYYY'),V_NGAYLAPVP);
END;
/
-- 6. DANG KY THAM GIA HOAT DONG
create or replace PROCEDURE DK_HOATDONG(
    V_MSSV SINHVIEN.MSSV%TYPE,
    V_MAHOATDONG HOATDONG.MAHOATDONG%TYPE
)
AS
BEGIN
    INSERT INTO DANGKYTG VALUES (V_MAHOATDONG, V_MSSV, 0);
END;
/
-- 7. Them hoa don khi dang ki phong -- ERROR
create or replace PROCEDURE THEM_HOADONPHONG(
    V_MSSV VARCHAR2,
    V_MAPHONG VARCHAR2,
    V_DENNGAY VARCHAR2
)
AS
V_NEW_ID HOADON.MAHOADON %TYPE;
V_LAST_ID HOADON.MAHOADON %TYPE;
V_SOTIEN NUMBER(10,2);
V_HANTHANHTOAN DATE;
BEGIN
    DBMS_LOCK.SLEEP(5);
   -- SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;
    SELECT MAX(MAHOADON) INTO V_LAST_ID FROM HOADON;
    IF V_LAST_ID IS NULL THEN
        V_NEW_ID := 'HD01';
    ELSE
        V_NEW_ID := 'HD' || LPAD(TO_NUMBER(SUBSTR(V_LAST_ID, 3)) + 1, 2, '0');
    END IF;
    --TINH TIEN
    V_SOTIEN:=TINHTIENPHONG(SYSDATE,TO_DATE(V_DENNGAY,'DD-MM-YYYY'),V_MAPHONG);
    --HAN THANH TOAN LA 7 NGAY SAU NGAY TAO HOADON
    V_HANTHANHTOAN:= SYSDATE+7;
    INSERT INTO HOADON(MAHOADON,MANV, MSSV, MAPHONG, TUNGAY, SOTIEN, LOAIHOADON, NGAYLAPHOADON, HANTHANHTOAN) 
    VALUES(V_NEW_ID,'',V_MSSV,V_MAPHONG,TO_DATE(V_TUNGAY,'DD-MM-YYYY'),V_SOTIEN,3,TO_DATE(SYSDATE,'DD-MM-YYYY'),TO_DATE(V_HANTHANHTOAN,'DD-MM-YYYY'));
END;
/

CREATE OR REPLACE PROCEDURE THEM_THONGBAO2(
    V_MANV NHANVIEN.MANV%TYPE,W
    V_NOIDUNG VARCHAR2
)
AS
V_LAST_ID THONGBAO.MATHONGBAO%TYPE;
V_NEW_ID THONGBAO.MATHONGBAO%TYPE;
BEGIN
    SELECT MAX(MATHONGBAO) INTO V_LAST_ID FROM THONGBAO;
    IF (V_LAST_ID) IS NULL THEN
        V_NEW_ID:='TB01';
    ELSE
        V_NEW_ID := 'TB' || LPAD(TO_NUMBER(SUBSTR(V_LAST_ID,3))+1,2,'0');
    END IF;
    --V_NGAYDANG := TO_DATE(SYSDATE,'DD-MM-YYYY');
    INSERT INTO THONGBAO VALUES (V_NEW_ID,V_MANV,'',SYSDATE,V_NOIDUNG);
END;  

-- 8. Them thong bao
create or replace PROCEDURE THEM_THONGBAO(
    V_MATHONGBAO OUT THONGBAO.MATHONGBAO%TYPE,
    V_MANV NHANVIEN.MANV%TYPE,
    V_MANGUOINHAN VARCHAR2,
    V_NGAYDANG OUT VARCHAR2,
    V_NOIDUNG VARCHAR2
)
AS
V_LAST_ID THONGBAO.MATHONGBAO%TYPE;
V_NEW_ID THONGBAO.MATHONGBAO%TYPE;
BEGIN
    SELECT MAX(MATHONGBAO) INTO V_LAST_ID FROM THONGBAO;
    IF (V_LAST_ID) IS NULL THEN
        V_NEW_ID:='TB01';
    ELSE
        V_NEW_ID := 'TB' || LPAD(TO_NUMBER(SUBSTR(V_LAST_ID,3))+1,2,'0');
    END IF;
    V_MATHONGBAO := V_NEW_ID;
    V_NGAYDANG := TO_DATE(SYSDATE,'DD-MM-YYYY');
    INSERT INTO THONGBAO VALUES (V_MATHONGBAO,V_MANV,V_MANGUOINHAN,V_NGAYDANG,V_NOIDUNG);
END;
/
-- 9. Them hoa don binh thuong
create or replace PROCEDURE THEM_HOADON(
    V_MANV VARCHAR2,
    V_MAPHONG VARCHAR2,
    V_MSSV VARCHAR2,
    V_SOTIEN NUMBER,
    V_LOAIHD NUMBER,
    V_HANTHANHTOAN VARCHAR2
)
AS
V_LAST_ID VARCHAR2(20);
V_NEW_ID VARCHAR2(20);
BEGIN
    SELECT MAX(MAHOADON) INTO V_LAST_ID FROM HOADON;
    IF V_LAST_ID IS NULL THEN
        V_NEW_ID := 'HD01';
    ELSE
        V_NEW_ID := 'HD' || LPAD(TO_NUMBER(SUBSTR(V_LAST_ID, 3)) + 1, 2, '0');
    END IF;

    INSERT INTO HOADON VALUES(V_NEW_ID,V_MANV,V_MSSV,V_MAPHONG,'',V_SOTIEN,V_LOAIHD,TO_DATE(SYSDATE,'DD-MM-YYYY'),TO_DATE(V_HANTHANHTOAN,'DD-MM-YYYY'),'');
END;
/
--------------------------------------------------------------------------------
--------------------------------------FUNCTION----------------------------------
-- 1. TINH TIEN PHONG KHI DKI PHONG
create or replace FUNCTION TINHTIENPHONG(
    V_TUNGAY DATE,
    V_DENNGAY DATE,
    V_MAPHONG VARCHAR2
)
RETURN NUMBER
AS
V_SOTIEN NUMBER;
V_TOTAL NUMBER(10,2);
V_SOTHANG NUMBER;
BEGIN
    --TIM GIA TIEN CUA LOAIPHONG 
    SELECT GIATIEN INTO V_SOTIEN
    FROM PHONG
    WHERE MAPHONG = V_MAPHONG;
    --TIM SO THANG GIUA 2 NGAY
    V_SOTHANG := MONTHS_BETWEEN(V_DENNGAY, V_TUNGAY);
    -- TINH TIEN PHONG
    V_TOTAL := V_SOTIEN * V_SOTHANG;
    RETURN V_TOTAL;
END;
/